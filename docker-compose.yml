services:
  postgres:
    image: postgres:15
    container_name: reforma_postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    networks:
      - reforma_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: reforma_backend
    environment:
      NODE_ENV: ${NODE_ENV}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      PORT: ${PORT}
      FRONTEND_URL: ${FRONTEND_URL}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./uploads:/app/uploads
      - ./backups:/app/backups
    networks:
      - reforma_network
      - proxy-network

  frontend:
    build:
      context: ./frontend
      args:
        VITE_API_URL: https://bsj.c2d.shop
    container_name: reforma_frontend
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - reforma_network
      - proxy-network

volumes:
  postgres_data:

networks:
  reforma_network:
    driver: bridge
  proxy-network:
    external: true

